{
  "_args": [
    [
      {
        "raw": "react-axios",
        "scope": null,
        "escapedName": "react-axios",
        "name": "react-axios",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/var/www/html/reactjs"
    ]
  ],
  "_from": "react-axios@latest",
  "_id": "react-axios@1.0.3",
  "_inCache": true,
  "_location": "/react-axios",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-axios-1.0.3.tgz_1501282949089_0.55487997434102"
  },
  "_npmUser": {
    "name": "sheaivey",
    "email": "me@sheaivey.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-axios",
    "scope": null,
    "escapedName": "react-axios",
    "name": "react-axios",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-axios/-/react-axios-1.0.3.tgz",
  "_shasum": "df930b5688cccb4ab51b1d8438ead486a4a295fb",
  "_shrinkwrap": null,
  "_spec": "react-axios",
  "_where": "/var/www/html/reactjs",
  "author": {
    "name": "Shea Ivey"
  },
  "bugs": {
    "url": "https://github.com/sheaivey/react-axios/issues"
  },
  "dependencies": {},
  "description": "Axios Component for React with child function callback.",
  "devDependencies": {
    "axios": "^0.16.2",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.18.2",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.2.8",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-react": "^6.16.0",
    "cross-env": "^3.1.3",
    "eslint": "^3.2.0",
    "eslint-config-rackt": "^1.1.1",
    "eslint-plugin-react": "^6.7.1",
    "express": "^4.14.0",
    "express-urlrewrite": "^1.2.0",
    "jest": "^17.0.3",
    "react": "^15.4.1",
    "react-dom": "^15.4.1",
    "react-test-renderer": "^1.1.0",
    "webpack": "^1.13.3",
    "webpack-dev-middleware": "^1.8.4"
  },
  "directories": {},
  "dist": {
    "shasum": "df930b5688cccb4ab51b1d8438ead486a4a295fb",
    "tarball": "https://registry.npmjs.org/react-axios/-/react-axios-1.0.3.tgz"
  },
  "files": [
    "*.md",
    "es",
    "lib",
    "umd"
  ],
  "gitHead": "4f464e9548c18675e5e6b8ba78ef406845a02759",
  "homepage": "https://github.com/sheaivey/react-axios",
  "jsnext:main": "es/index.js",
  "keywords": [
    "axios",
    "react",
    "component",
    "xhr",
    "http",
    "ajax",
    "promise",
    "node"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "sheaivey",
      "email": "me@sheaivey.com"
    }
  ],
  "name": "react-axios",
  "optionalDependencies": {},
  "peerDependencies": {
    "axios": "^0.15.0 || ^0.16.0",
    "react": "^0.14.0 || ^15.0.0",
    "prop-types": "^15.5.0"
  },
  "readme": "\n[![npm](https://img.shields.io/npm/v/react-axios.svg)](https://www.npmjs.com/package/react-axios)\n[![Build Status](https://travis-ci.org/sheaivey/react-axios.svg?branch=master)](https://travis-ci.org/sheaivey/react-axios)\n[![npm](https://img.shields.io/npm/l/react-axios.svg)](https://github.com/sheaivey/react-axios/blob/master/LICENSE)\n[![npm](https://img.shields.io/npm/dt/react-axios.svg)](https://www.npmjs.com/package/react-axios)\n# react-axios\nAxios Component for React with child function callback.\nThis is intended to allow in render async requests.\n\n## Features\n\n- Same great features found in [Axios](https://github.com/mzabriskie/axios)\n- Component driven\n- Child function callback ***(error, response, isLoading) => { }***\n- Auto cancel previous requests\n- Debounce to prevent rapid calls.\n- Request only invoked on prop change and *isReady* state.\n- Callback props for ***onSuccess***, ***onError***, and ***onLoading***\n- Supports custom axios instances through ***props*** or a ***&lt;AxiosProvider ... &gt;***\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install react-axios\n```\n\n## Components & Properties\n\n#### Base Request Component\n```js\n<Request\n  instance={axios.create({})} /* custom instance of axios - optional */\n  method=\"\" /* get, delete, head, post, put and patch - required */\n  url=\"\" /*  url endpoint to be requested - required */\n  data={} /* post data - optional */\n  config={} /* axios config - optional */\n  debounce={200} /* minimum time between requests events - optional */\n  debounceImmediate={true} /* make the request on the beginning or trailing end of debounce - optional */\n  isReady={true} /* can make the axios request - optional */\n  onSuccess={(response)=>{}} /* called on success of axios request - optional */\n  onLoading={()=>{}} /* called on start of axios request - optional */\n  onError=(error)=>{} /* called on error of axios request - optional */\n/>\n```\n\n#### Helper Components\n```js\n<Get ... />\n<Delete ... />\n<Head ... />\n<Post ... />\n<Put ... />\n<Patch ... />\n```\n\n## Example\n\nInclude in your file\n\n```js\nimport { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\n```\n\nPerforming a `GET` request\n\n```js\n// Post a request for a user with a given ID\nrender() {\n  return (\n    <div>\n      <Post url=\"/api/user\" data={{id: \"12345\"}}>\n        {(error, response, isLoading) => {\n          if(error) {\n            return (<div>Something bad happened: {error.message}</div>)\n          }\n          else if(isLoading) {\n            return (<div>Loading...</div>)\n          }\n          else if(response !== null) {\n            return (<div>{response.data.message}</div>)\n          }\n          return (<div>Default message before request is made.</div>)\n        }}\n      </Post>\n    </div>\n  )\n}\n```\n\n\n## Custom Axios Instance\n\nCreate an axios instance\n```js\nconst axiosInstance = axios.create({\n  baseURL: '/api/',\n  timeout: 2000,\n  headers: { 'X-Custom-Header': 'foobar' }\n});\n\n```\n\nPass down through a provider\n```js\n<AxiosProvider instance={axiosInstance}>\n  <Get url=\"test\">\n    {(error, response, isLoading) => {\n      ...\n    }}\n  </Get>\n</AxiosProvider>\n```\n\nOr pass down through props\n```js\n<Get url=\"test\" instance={axiosInstance}>\n  {(error, response, isLoading) => {\n    ...\n  }}\n</Get>\n```\n\nRetrieve from custom provider (when you need to directly use axios).\nThe default instance will be passed if not inside an `<AxiosProvider/>`.\n```js\nconst MyComponent = withAxios(class MyComponentImpl extends React.Component {\n  componentWillMount() {\n    this.props.axios('test').then(result => {\n      this.setState({ data: result.data })\n    })\n  }\n  render() {\n    const data = (this.state || {}).data\n    return <div>{JSON.stringify(data)}</div>\n  }\n})\n\n<AxiosProvider instance={axiosInstance}>\n  <MyComponent/>\n</AxiosProvider>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sheaivey/react-axios.git"
  },
  "scripts": {
    "build": "npm run build-cjs && npm run build-es && npm run build-umd && npm run build-min",
    "build-cjs": "rimraf lib && cross-env BABEL_ENV=cjs babel src -d lib --ignore __tests__",
    "build-es": "rimraf es && cross-env BABEL_ENV=es babel src -d es --ignore __tests__",
    "build-min": "cross-env NODE_ENV=production webpack -p src/index.js umd/ReactAxios.min.js",
    "build-umd": "cross-env NODE_ENV=development webpack src/index.js umd/ReactAxios.js",
    "lint": "eslint src",
    "start": "node examples/index.js",
    "test": "npm run lint && jest"
  },
  "version": "1.0.3"
}
